import { QueueStorageSeedwork } from '@cellix/data-sources-queue-storage';
import type { OutboundExampleEventPayloadType } from './1-outbound-example.payload-type.ts';

export const OutboundExampleSchema: QueueStorageSeedwork.JSONSchema<OutboundExampleEventPayloadType> = {
  $schema: "https://json-schema.org/draft/2020-12/schema",
  type: "object",
  title: "1-outbound-example",
  properties: {
    eventTimestamp: {
      type: "string",
      pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]\\.[0-9]{3}Z$",
      description: "Date-time value converted to UTC timezone, and represented in ISO format",
      examples: ["2023-03-21T02:53:27.872Z"]
    },
    eventId: {
      type: "string",
      maxLength: 36,
      description: "unique id generated by the system to identify the event",
      examples: ["123e4567-e89b-12d3-a456-426614174000"]
    },
    eventName: {
      type: "string",
      enum: ["outbound-example"],
      description: "Name of the event, used to identify the queue",
      examples: ["outbound-example"]
    },
    eventType: {
      type: "string",
      enum: ["DOCUMENT_EVENT", "BUSINESS_EVENT", "REQUEST"],
      description: "Type of the event, used to categorize the message",
      examples: ["DOCUMENT_EVENT"]
    },
    traceParent: {
      type: "string",
      nullable: true,
      examples: ["traceParent-001"]
    },
    traceState: {
      type: "string",
      nullable: true,
      examples: ["traceState-success"]
    },
    eventPayload: {
      type: "object",
      properties: {
        requiredField: {
          type: "string",
          pattern: "^1\\d{6}$",
          description: "Required Field",
          examples: ["1234567"]
        },
        optionalField: {
          type: "string",
          pattern: "^(completed|pending|failed)$",
          nullable: true,
          examples: ["completed", "pending", "failed"]
        }
      },
      required: ["requiredField"],
      additionalProperties: true
    }
  },
  required: ["eventTimestamp", "eventId", "eventPayload", "eventType", "eventName"],
  additionalProperties: false
};