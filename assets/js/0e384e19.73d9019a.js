"use strict";(self.webpackChunk_ocom_docs=self.webpackChunk_ocom_docs||[]).push([[3976],{5965:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"intro","title":"Introduction \ud83d\udc4b","description":"Let\'s discover CellixJs in less than 5 minutes.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/CellixJs/cellixjs/tree/main/packages/docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","next":{"title":"Technical Overview","permalink":"/docs/category/technical-overview"}}');var i=s(1360),r=s(9900);const o={sidebar_position:1},t="Introduction \ud83d\udc4b",c={},a=[{value:"Getting Started",id:"getting-started",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Clone and Setup",id:"clone-and-setup",level:2},{value:"Install VSCode plugins",id:"install-vscode-plugins",level:2},{value:"Local SonarCloud Analysis",id:"local-sonarcloud-analysis",level:2},{value:"Start Development",id:"start-development",level:2},{value:"Verify Code Quality locally",id:"verify-code-quality-locally",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction-",children:"Introduction \ud83d\udc4b"})}),"\n",(0,i.jsxs)(n.p,{children:["Let's discover ",(0,i.jsx)(n.strong,{children:"CellixJs in less than 5 minutes"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.p,{children:["Get started by ",(0,i.jsx)(n.strong,{children:"exploring the CellixJs platform"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"CellixJs is a Domain-Driven Design (DDD) monorepo built on Azure Functions, implementing a modular architecture with strict separation of concerns."}),"\n",(0,i.jsx)(n.h3,{id:"what-youll-need",children:"What you'll need"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js"})," version 22.0 or above:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When installing Node.js, you are recommended to check all checkboxes related to dependencies."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local",children:"Azure Functions Core Tools"})," for local development"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"func --version"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"should return 4.0.6610 or greater"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/Azure/azure-functions-core-tools#installing",children:"Install Guide"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"to upgrade: (mac)"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"brew upgrade azure-functions-core-tools@4"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.mongodb.com/try/download/community",children:"MongoDB"})," or access to a MongoDB instance"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"clone-and-setup",children:"Clone and Setup"}),"\n",(0,i.jsx)(n.p,{children:"Clone the CellixJs repository and set up the development environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/CellixJs/cellixjs.git\ncd cellixjs\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install dependencies and build the project: (we recommend using NVM)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Node.js v22\nnvm install v22\n\n# Install Latest NPM (v11+)\nnvm install-latest-npm\n\n# Use Node.js v22\nnvm use v22\n\n# Clean, install dependencies, and build\nnpm run clean\nnpm install \nnpm run build\n"})}),"\n",(0,i.jsx)(n.h2,{id:"install-vscode-plugins",children:"Install VSCode plugins"}),"\n",(0,i.jsxs)(n.p,{children:["You will be prompted to install the ",(0,i.jsx)(n.a,{href:"https://github.com/CellixJs/cellixjs/blob/main/.vscode/extensions.json",children:"recommended VSCode Plugins"})," upon opening the project in VSCode. Go ahead and do so."]}),"\n",(0,i.jsx)(n.h2,{id:"local-sonarcloud-analysis",children:"Local SonarCloud Analysis"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a SonarCloud API token from your ",(0,i.jsx)(n.a,{href:"https://sonarcloud.io/account/security/",children:"SonarCloud account"})]}),"\n",(0,i.jsx)(n.li,{children:"Run the following command using your token in the terminal"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "export SONAR_TOKEN=<your-token>" >> ~/.zshrc\nsource ~/.zshrc\n'})}),"\n",(0,i.jsx)(n.h2,{id:"start-development",children:"Start Development"}),"\n",(0,i.jsx)(n.p,{children:"Run the development environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,i.jsx)(n.p,{children:"This command will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Build all workspace packages with linting"}),"\n",(0,i.jsx)(n.li,{children:"Start mock emulator services (Azurite for Azure Storage, MongoDB in-memory replica set, OAuth2/OIDC mock server)"}),"\n",(0,i.jsx)(n.li,{children:"Launch the backend Azure Functions runtime"}),"\n",(0,i.jsx)(n.li,{children:"Start the frontend React UI"}),"\n",(0,i.jsx)(n.li,{children:"Start the documentation site"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The development server will be available at:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:7071",children:"http://localhost:7071"})," (Azure Functions)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GraphQL Playground"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:7071/api/graphql",children:"http://localhost:7071/api/graphql"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," (React UI)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docs"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:3001",children:"http://localhost:3001"})," (Docusaurus)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"verify-code-quality-locally",children:"Verify Code Quality locally"}),"\n",(0,i.jsx)(n.p,{children:"Run all verification steps (lint, build, test, sonarcloud, quality gate):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run verify\n"})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"> ...\n> Quality Gate passed.\n"})}),"\n",(0,i.jsx)(n.p,{children:"If there are any failing builds, tests, or sonarcloud analysis issues, this command will report them. Please address any issues before pushing code to simulate the CI pipeline and ensure checks will pass on the remote repository."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Note: The ",(0,i.jsx)(n.code,{children:"verify"})," command requires a valid SONAR_TOKEN environment variable for SonarCloud analysis. See the ",(0,i.jsx)(n.a,{href:"#local-sonarcloud-analysis",children:"Local SonarCloud Analysis"})," section for setup instructions."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,i.jsx)(n.p,{children:"CellixJs follows these core patterns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Application Packages"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API"}),": Azure Functions backend application ",(0,i.jsx)(n.code,{children:"apps/api"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UI"}),": React frontend application ",(0,i.jsx)(n.code,{children:"apps/ui-community"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docs"}),": Documentation site using Docusaurus ",(0,i.jsx)(n.code,{children:"apps/docs"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Library Packages"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cellix"}),": Core framework and seedwork libraries used across projects ",(0,i.jsx)(n.code,{children:"packages/cellix/*"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ocom"}),": Application-specific libraries used by frontend and backend ",(0,i.jsx)(n.code,{children:"packages/ocom/*"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Open any file in the ",(0,i.jsx)(n.code,{children:"apps/"})," or ",(0,i.jsx)(n.code,{children:"packages/"})," directory and start exploring: the project uses hot reloading for rapid development!"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},9900:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var l=s(6364);const i={},r=l.createContext(i);function o(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);