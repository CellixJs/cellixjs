parameters:
- name: ServiceConnectionName
  type: string
- name: deploymentDefaultLocation
  type: string
- name: resourceGroupName
  type: string
- name: environmentNameBicep
  type: string
- name: environmentNameDevOps
  type: string
- name: vmImageName
  type: string
- name: functionAppNamePri
  type: string
- name: appSettingsJsonFileRelativePathPri
  displayName: 'AppSettings Json File Relative Path for Primary instance'
  type: string

jobs:
- job: Infrastructure
  displayName: Infrastructure Setup
  condition: eq(stageDependencies.Build.Build.outputs['BuildJob.HAS_BACKEND_CHANGES'], 'true')
  pool:
    vmImage: ${{parameters.vmImageName}}
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      connectedServiceName: ${{parameters.ServiceConnectionName}}
      deploymentName: $(Build.BuildNumber)
      location: ${{parameters.deploymentDefaultLocation}}
      resourceGroupName: ${{parameters.resourceGroupName}}
      csmFile: apps/api/iac/main.bicep
      csmParametersFile: apps/api/iac/${{parameters.environmentNameBicep}}.bicepparam
      # overrideParameters: >
      #           -environment ${{parameters.environmentNameBicep}}

- deployment: Application_Deployment_Pri
  displayName: Application Deployment (Primary)
  condition: eq(stageDependencies.Build.Build.outputs['BuildJob.HAS_BACKEND_CHANGES'], 'true')
  dependsOn: Infrastructure
  environment: ${{parameters.environmentNameDevOps}}
  pool:
    vmImage: ${{parameters.vmImageName}}
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          displayName: 'Artifact: Download API package'
          artifact: api
        - task: AzureFunctionApp@1
          displayName: 'Azure Functions App Deploy: ${{parameters.functionAppNamePri}}'
          inputs:
            azureSubscription: ${{parameters.ServiceConnectionName}}
            appType: 'functionAppLinux'
            appName: ${{parameters.functionAppNamePri}}
            package: '$(Pipeline.Workspace)/api/api-$(Build.BuildId).zip'
            runtimeStack: 'NODE|22'
            deploymentMethod: 'runFromPackage'

- job: Application_Settings_Pri
  displayName: Application Settings (Primary)
  condition: eq(stageDependencies.Build.Build.outputs['BuildJob.HAS_BACKEND_CHANGES'], 'true')
  dependsOn: Application_Deployment_Pri
  pool:
    vmImage: ${{parameters.vmImageName}}
  steps:
  - powershell: |
      $output = Get-Content '$(Build.SourcesDirectory)/${{parameters.appSettingsJsonFileRelativePathPri}}'
      Write-Host "##vso[task.setvariable variable=appSettingsPri]$($output)"
  - task: AzureAppServiceSettings@1
    inputs:
      azureSubscription: ${{parameters.ServiceConnectionName}}
      appName: ${{parameters.functionAppNamePri}}
      appSettings: '$(appSettingsPri)'